apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-react-app
  labels:
    app: my-react-app
spec:
  replicas: 2
  selector:
    matchLabels:
      app: my-react-app
  template:
    metadata:
      labels:
        app: my-react-app
    spec:
      containers:
      - name: my-react-app
        image: react:1.0
        ports:
        - containerPort: 80
        volumeMounts:
          - name: nginx-config
            mountPath: /etc/nginx/nginx.conf
            subPath: nginx.conf
          - name: ca
            mountPath: /opt/certificates/
      volumes:
        - name: nginx-config
          configMap:
            name: nginx-cm
        - name: ca
          secret:
            secretName: ca-secret
---
apiVersion: v1
kind: Service
metadata:
  name: my-react-app-service
spec:
  selector:
    app: my-react-app
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-cm
data:
  nginx.conf: |
    user                            nginx;
    worker_processes                auto; # it will be determinate automatically by the number of core

    error_log                       /var/log/nginx/error.log warn;
    #pid                             /var/run/nginx/nginx.pid; # it permit you to use rc-service nginx reload|restart|stop|start

    events {
        worker_connections          1024;
    }

    http {
        include                     /etc/nginx/mime.types;
        default_type                application/octet-stream;
        sendfile                    on;
        access_log                  /var/log/nginx/access.log;
        error_log                   /var/log/nginx/error.log debug;
        keepalive_timeout           3000;
        upstream Backend {
          server apiservice;
        }
        server {
            listen                  80;
            server_name             localhost;
            client_max_body_size    32m;
            error_page              500 502 503 504  /50x.html;
            resolver kube-dns.kube-system.svc.cluster.local valid=5s;

            location / {
                root            /usr/share/nginx/html;
                index           index.html index.htm;
            }

            location ~ /api/* {
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
                proxy_pass http://Backend;

                proxy_http_version 1.1;
            }
        }
    }
---
apiVersion: v1
kind: Secret
metadata:
  name: ca-secret
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJHekNCd3dJVUx4S2ZyOUdMS0JOR1p6Y204UVc1Y2tyN2pkd3dDZ1lJS29aSXpqMEVBd0l3RVRFUE1BMEcKQTFVRUF3d0dVbTl2ZEVOQk1CNFhEVEkwTURRd01URTROVEUwT0ZvWERUSTBNRFV3TVRFNE5URTBPRm93RVRFUApNQTBHQTFVRUF3d0dVbTl2ZEVOQk1Ga3dFd1lIS29aSXpqMENBUVlJS29aSXpqMERBUWNEUWdBRUZRU0c0TVBjCmt2TjBtMjY1QzdCY254MDdiQ0VEM3RkeGtwYXJaYnA4YmFsaVVKMkpWNHdYcWMzTTgyR1dmYWdMTG40NlBXVnkKOGVnY0haTStlVmhIMnpBS0JnZ3Foa2pPUFFRREFnTkhBREJFQWlCc0IvaEFlVWhlSC9HcDdDeU5JcGwyRmJqVQpWUVZGQXFMQWt6UERwcUxBWndJZ09WWjBzUEVuWFl5cnM4YWp5ZC8rZURWSUphaEI0S2UwRUY3djRhR1NBa1k9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
